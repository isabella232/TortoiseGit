From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Dominik Niko Fink <simon.fink@uni-passau.de>
Date: Thu, 27 Aug 2020 13:21:24 +0200
Subject: [PATCH] Fix reversed bends array on backwards edges generated by
 SugiyamaLayout

---
 src/ogdf/layered/SugiyamaLayout.cpp | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/src/ogdf/layered/SugiyamaLayout.cpp b/src/ogdf/layered/SugiyamaLayout.cpp
index 8359df1c9..a5bfc9604 100644
--- a/src/ogdf/layered/SugiyamaLayout.cpp
+++ b/src/ogdf/layered/SugiyamaLayout.cpp
@@ -1166,6 +1166,19 @@ void SugiyamaLayout::doCall(GraphAttributes &AG, bool umlCall, NodeArray<int> &r
 
 	for(edge e : G.edges) {
 		AG.bends(e).normalize();
+		// Hierarchy reverses all edges in it's own GraphCopy that would otherwise face downwards,
+		// i.e. go from a higher level to a lower level. As the bend points are inserted into the
+		// original GraphAttributes following the edge direction in the GraphCopy, these points are
+		// then the wrong way around if the edge was reversed in the GraphCopy.
+		// This detects this by checking which bend point is closer to the actual source and
+		// reversing the bend points if necessary.
+		if (AG.bends(e).size() >= 2) {
+			bool nodes_lt = AG.y(e->source()) < AG.y(e->target());
+			bool bends_lt = AG.bends(e).front().m_y < AG.bends(e).back().m_y;
+			if (nodes_lt != bends_lt) {
+				AG.bends(e).reverse();
+			}
+		}
 	}
 }
 
-- 
2.25.1
